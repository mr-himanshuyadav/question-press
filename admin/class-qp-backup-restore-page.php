<?php
if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly.
}

class QP_Backup_Restore_Page
{

    /**
     * Handles form submissions for the Backup & Restore page.
     */
    public static function handle_forms()
    {
        if (!isset($_POST['action']) || $_POST['action'] !== 'qp_restore_from_upload') {
            return;
        }

        if (!isset($_POST['qp_restore_nonce_field']) || !wp_verify_nonce($_POST['qp_restore_nonce_field'], 'qp_restore_nonce_action')) {
            wp_die('Security check failed.');
        }

        if (!isset($_FILES['backup_zip_file']) || $_FILES['backup_zip_file']['error'] !== UPLOAD_ERR_OK) {
            add_settings_error('qp_backup_notices', 'restore_error', 'File upload error. Please try again.', 'error');
            return;
        }

        $file = $_FILES['backup_zip_file'];

        // Security: Check file type
        if (!in_array($file['type'], ['application/zip', 'application/x-zip-compressed'])) {
            add_settings_error('qp_backup_notices', 'restore_error', 'Invalid file type. Please upload a .zip file.', 'error');
            return;
        }

        // Move the uploaded file to our backups directory
        $upload_dir = wp_upload_dir();
        $backup_dir = trailingslashit($upload_dir['basedir']) . 'qp-backups';
        if (!file_exists($backup_dir)) {
            wp_mkdir_p($backup_dir);
        }

        $new_filename = 'uploaded-' . date('Y-m-d-H-i-s') . '-' . sanitize_file_name($file['name']);
        $new_filepath = trailingslashit($backup_dir) . $new_filename;

        if (!move_uploaded_file($file['tmp_name'], $new_filepath)) {
            add_settings_error('qp_backup_notices', 'restore_error', 'Failed to move uploaded file.', 'error');
            return;
        }

        // Now, call the restore logic (we will refactor this in the next steps)
        // For now, this will just confirm the file was uploaded.
        add_settings_error('qp_backup_notices', 'restore_success', 'File uploaded successfully and saved locally as ' . $new_filename . '. Restore logic will be implemented next.', 'success');
    }


    /**
     * Renders the Backup & Restore tab content.
     */
    public static function render()
    {
        // In future steps, we will add logic here to fetch local backups.
        $local_backups = []; // Placeholder for now.
?>
        <?php settings_errors('qp_backup_notices'); ?>
        <div id="col-container" class="wp-clearfix">
            <div id="col-left">
                <div class="col-wrap">
                    <div class="form-wrap">
                        <h2>Create New Backup</h2>
                        <p>Click the button below to generate a full backup of all your Question Press data, including questions, groups, subjects, topics, sources, exams, labels, and associated images.</p>
                        <p>
                            <a href="#" class="button button-primary" id="qp-create-backup-btn">Create New Backup</a>
                        </p>
                    </div>
                    <hr>
                    <div class="form-wrap">
                        <h2>Restore from Backup</h2>
                        <p>Upload a <code>.zip</code> backup file that was generated by this tool to restore your data. <strong>Warning:</strong> This will overwrite any existing data with the contents of the backup file.</p>
                        <form id="qp-restore-form" method="post" enctype="multipart/form-data" action="<?php echo esc_url(admin_url('admin.php?page=qp-tools&tab=backup_restore')); ?>">
                            <input type="hidden" name="action" value="qp_restore_from_upload">
                            <?php wp_nonce_field('qp_restore_nonce_action', 'qp_restore_nonce_field'); ?>
                            <div class="form-field">
                                <label for="backup_zip_file">Backup File (.zip)</label>
                                <input type="file" name="backup_zip_file" id="backup_zip_file" accept=".zip,application/zip" required>
                            </div>
                            <p class="submit">
                                <input type="submit" class="button button-danger" value="Upload and Restore">
                            </p>
                        </form>
                    </div>
                </div>
            </div>
            <div id="col-right">
                <div class="col-wrap">
                    <h3>Local Backups</h3>
                    <table class="wp-list-table widefat fixed striped">
                        <thead>
                            <tr>
                                <th>Backup Date</th>
                                <th>Backup Name</th>
                                <th>File Size</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="qp-local-backups-list">
                            <?php echo qp_get_local_backups_html(); ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
<?php
    }
}
