<?php
if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly.
}

class QP_Backup_Restore_Page
{

    /**
     * Handles form submissions for the Backup & Restore page.
     */
    public static function handle_forms() {
    // Handle Auto Backup Settings
    if (isset($_POST['action']) && $_POST['action'] === 'qp_save_auto_backup_settings') {
        if (check_admin_referer('qp_auto_backup_nonce_action', 'qp_auto_backup_nonce_field')) {
            $interval = isset($_POST['auto_backup_interval']) ? absint($_POST['auto_backup_interval']) : 1;
            $frequency = isset($_POST['auto_backup_frequency']) ? sanitize_key($_POST['auto_backup_frequency']) : 'daily';
            
            // In the next step, we will add the scheduling logic here.
            // For now, we just show a success message.
            add_settings_error('qp_backup_notices', 'auto_backup_saved', 'Auto backup schedule saved. Scheduling logic to be added.', 'success');
        }
        return;
    }

    if (!isset($_POST['action']) || $_POST['action'] !== 'qp_restore_from_upload') {
        return;
    }


    if (!isset($_POST['qp_restore_nonce_field']) || !wp_verify_nonce($_POST['qp_restore_nonce_field'], 'qp_restore_nonce_action')) {
        wp_die('Security check failed.');
    }

    if (!isset($_FILES['backup_zip_file']) || $_FILES['backup_zip_file']['error'] !== UPLOAD_ERR_OK) {
        add_settings_error('qp_backup_notices', 'restore_error', 'File upload error. Please try again.', 'error');
        return;
    }

    $file = $_FILES['backup_zip_file'];

    if (!in_array($file['type'], ['application/zip', 'application/x-zip-compressed'])) {
        add_settings_error('qp_backup_notices', 'restore_error', 'Invalid file type. Please upload a .zip file.', 'error');
        return;
    }

    $upload_dir = wp_upload_dir();
    $backup_dir = trailingslashit($upload_dir['basedir']) . 'qp-backups';
    if (!file_exists($backup_dir)) {
        wp_mkdir_p($backup_dir);
    }
    
    $new_filename = 'uploaded-' . date('Y-m-d-H-i-s') . '-' . sanitize_file_name($file['name']);
    $new_filepath = trailingslashit($backup_dir) . $new_filename;

    if (!move_uploaded_file($file['tmp_name'], $new_filepath)) {
        add_settings_error('qp_backup_notices', 'restore_error', 'Failed to move uploaded file.', 'error');
        return;
    }

    // Now, call the new restore function with the uploaded filename
    $result = qp_perform_restore($new_filename);

    // Clean up the uploaded file regardless of success or failure
    if (file_exists($new_filepath)) {
        unlink($new_filepath);
    }

    if ($result['success']) {
        $stats = $result['stats'];
        $message = '<strong>Restore Complete!</strong><br> - Questions: ' . $stats['questions'] . '<br> - Options: ' . $stats['options'] . '<br> - Sessions: ' . $stats['sessions'] . '<br> - Attempts: ' . $stats['attempts'];
        add_settings_error('qp_backup_notices', 'restore_success', $message, 'success');
    } else {
        add_settings_error('qp_backup_notices', 'restore_error', 'Restore failed: ' . $result['message'], 'error');
    }
}


    /**
     * Renders the Backup & Restore tab content.
     */
    public static function render()
    {
        // In future steps, we will add logic here to fetch local backups.
        $local_backups = []; // Placeholder for now.
?>
        <style>
        .qp-backups-table th.column-date { width: 20%; }
        .qp-backups-table th.column-name { width: 35%; }
        .qp-backups-table th.column-size { width: 10%; }
        .qp-backups-table th.column-actions { width: 35%; }
        .qp-backups-table .column-actions .button { white-space: nowrap; }
            </style>
        <?php settings_errors('qp_backup_notices'); ?>
        <div id="col-container" class="wp-clearfix">
            <div id="col-left">
                <div class="col-wrap">
                    <div class="form-wrap">
                        <h2>Create New Backup</h2>
                        <p>Click the button below to generate a full backup of all your Question Press data, including questions, groups, subjects, topics, sources, exams, labels, and associated images.</p>
                        <p>
                            <a href="#" class="button button-primary" id="qp-create-backup-btn">Create New Backup</a>
                        </p>
                    </div>
                    <hr>
                    <div class="form-wrap">
                        <h2>Restore from Backup</h2>
                        <p>Upload a <code>.zip</code> backup file that was generated by this tool to restore your data. <strong>Warning:</strong> This will overwrite any existing data with the contents of the backup file.</p>
                        <form id="qp-restore-form" method="post" enctype="multipart/form-data" action="<?php echo esc_url(admin_url('admin.php?page=qp-tools&tab=backup_restore')); ?>">
                            <input type="hidden" name="action" value="qp_restore_from_upload">
                            <?php wp_nonce_field('qp_restore_nonce_action', 'qp_restore_nonce_field'); ?>
                            <div class="form-field">
                                <label for="backup_zip_file">Backup File (.zip)</label>
                                <input type="file" name="backup_zip_file" id="backup_zip_file" accept=".zip,application/zip" required>
                            </div>
                            <p class="submit">
                                <input type="submit" class="button button-danger" value="Upload and Restore">
                            </p>
                        </form>
                    </div>
                    <hr>
                    <div class="form-wrap">
                        <h2>Auto Backup Settings</h2>
                        <p>Automatically create a local backup at a scheduled interval. The WordPress cron system requires site visits to trigger events, so schedules may not be exact.</p>
                        <form id="qp-auto-backup-form" method="post" action="<?php echo esc_url(admin_url('admin.php?page=qp-tools&tab=backup_restore')); ?>">
                            <input type="hidden" name="action" value="qp_save_auto_backup_settings">
                            <?php wp_nonce_field('qp_auto_backup_nonce_action', 'qp_auto_backup_nonce_field'); ?>

                            <div class="auto-backup-fields">
                                <span>Every</span>
                                <input type="number" name="auto_backup_interval" min="1" value="1" style="width: 70px;">
                                <select name="auto_backup_frequency">
                                    <option value="daily">Day(s)</option>
                                    <option value="weekly">Week(s)</option>
                                    <option value="monthly">Month(s)</option>
                                </select>
                            </div>

                            <p class="submit">
                                <input type="submit" class="button button-primary" value="Save Schedule">
                                <button type="button" class="button button-secondary" id="qp-disable-auto-backup-btn">Disable</button>
                            </p>
                        </form>
                    </div>
                </div>
            </div>
            <div id="col-right">
                <div class="col-wrap">
                    <h3>Backups</h3>
                    <table class="wp-list-table widefat fixed striped qp-backups-table">
                        <thead>
                            <tr>
                                <th class="column-date">Backup Date</th>
                                <th class="column-name">Backup Name</th>
                                <th class="column-size">File Size</th>
                                <th class="column-actions">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="qp-local-backups-list">
                            <?php echo qp_get_local_backups_html(); ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
<?php
    }
}
